// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"
	"time"
)

type RuleType string

const (
	RuleTypeInclude RuleType = "include"
	RuleTypeExclude RuleType = "exclude"
)

func (e *RuleType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RuleType(s)
	case string:
		*e = RuleType(s)
	default:
		return fmt.Errorf("unsupported scan type for RuleType: %T", src)
	}
	return nil
}

type NullRuleType struct {
	RuleType RuleType `json:"rule_type"`
	Valid    bool     `json:"valid"` // Valid is true if RuleType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRuleType) Scan(value interface{}) error {
	if value == nil {
		ns.RuleType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.RuleType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRuleType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.RuleType), nil
}

type StatusType string

const (
	StatusTypeActive   StatusType = "active"
	StatusTypeInactive StatusType = "inactive"
)

func (e *StatusType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = StatusType(s)
	case string:
		*e = StatusType(s)
	default:
		return fmt.Errorf("unsupported scan type for StatusType: %T", src)
	}
	return nil
}

type NullStatusType struct {
	StatusType StatusType `json:"status_type"`
	Valid      bool       `json:"valid"` // Valid is true if StatusType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullStatusType) Scan(value interface{}) error {
	if value == nil {
		ns.StatusType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.StatusType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullStatusType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.StatusType), nil
}

type Campaign struct {
	Cid       string     `json:"cid"`
	Img       string     `json:"img"`
	Cta       string     `json:"cta"`
	Status    StatusType `json:"status"`
	CreatedAt time.Time  `json:"created_at"`
}

type CampaignStatusHistory struct {
	ID           int32     `json:"id"`
	Cid          string    `json:"cid"`
	FieldChanged string    `json:"field_changed"`
	OldValue     string    `json:"old_value"`
	NewValue     string    `json:"new_value"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type TargetApp struct {
	Cid   string   `json:"cid"`
	AppID string   `json:"app_id"`
	Rule  RuleType `json:"rule"`
}

type TargetCountry struct {
	Cid     string   `json:"cid"`
	Country string   `json:"country"`
	Rule    RuleType `json:"rule"`
}

type TargetO struct {
	Cid  string   `json:"cid"`
	Os   string   `json:"os"`
	Rule RuleType `json:"rule"`
}
