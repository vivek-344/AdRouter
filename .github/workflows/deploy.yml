name: build and deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-push-artifact:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev --quiet

      - name: "Write secrets to app.env file"
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> app.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> app.env
          echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" >> app.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> app.env
          echo "SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }}" >> app.env
          echo "REDIS_SOURCE=${{ secrets.REDIS_SOURCE }}" >> app.env

      - name: "Build main image"
        run: |
          docker build . --file Dockerfile --tag ${{ vars.GAR_LOCATION }}/adrouter:latest

      - name: "Push main image"
        run: |
          docker push ${{ vars.GAR_LOCATION }}/adrouter:latest

      - name: "Build Migrate image"
        run: |
          docker build . --file Dockerfile.migrate --tag ${{ vars.GAR_LOCATION }}/migrate:latest

      - name: "Push Migrate image"
        run: |
          docker push ${{ vars.GAR_LOCATION }}/migrate:latest

      - name: "Set up kubectl"
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ vars.GKE_CLUSTER }}"
          location: "${{ vars.GCP_REGION }}"

      - name: "Run database migrations"
        run: |
          MIGRATION_JOB="migration-$(date +%s)"
          echo "MIGRATION_JOB=$MIGRATION_JOB" >> $GITHUB_ENV
          kubectl create job $MIGRATION_JOB --image=${{ vars.GAR_LOCATION }}/migrate:latest
          kubectl wait --for=condition=complete job/$MIGRATION_JOB --timeout=60s

      - name: "Deploy main application"
        run: |
          kubectl get deployment adrouter-server && \
          kubectl set image deployment/adrouter-server adrouter=${{ vars.GAR_LOCATION }}/adrouter:latest || \
          kubectl create deployment adrouter-server --image=${{ vars.GAR_LOCATION }}/adrouter:latest